{"version":3,"file":"static/js/496.2d57c923.chunk.js","mappings":"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","sources":["components/AutoCardList/AutoCardList.styled.js","components/FormikForm/FormikForm.js","components/AutoCardList/AutoCardList.js","pages/Catalog.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AutoList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 29px;\n  padding: 0px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  setBrandFilter,\n  setPriceFilter,\n  setFromMileage,\n  setToMileage,\n} from 'redux/autosSlice';\nimport arrData from './makes.json';\n\nexport const FilterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(setBrandFilter(values.brand));\n    dispatch(setPriceFilter(values.price));\n    dispatch(setFromMileage(values.minMileage));\n    dispatch(setToMileage(values.maxMileage));\n\n    setSubmitting(false);\n    resetForm();\n  };\n\n  const prices = [];\n  for (let i = 10; i <= 100; i += 10) {\n    prices.push(i);\n  }\n  return (\n    <Formik\n      initialValues={{\n        brand: '',\n        price: '',\n        minMileage: '',\n        maxMileage: '',\n      }}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <label htmlFor=\"brand\">Find brand:</label>\n          <Field as=\"select\" name=\"brand\">\n            <option value=\"\">Select a brand</option>\n            {arrData.map((brand, index) => (\n              <option key={index} value={brand}>\n                {brand}\n              </option>\n            ))}\n          </Field>\n          <label htmlFor=\"price\">Price/1 hour:</label>\n          <Field as=\"select\" name=\"price\">\n            <option value=\"\">Select a price</option>\n            {prices.map((price, index) => (\n              <option key={index} value={price}>\n                {price}\n              </option>\n            ))}\n          </Field>\n          <label htmlFor=\"minMileage\">Minimum mileage/km:</label>\n          <Field type=\"text\" name=\"minMileage\" />\n          <label htmlFor=\"maxMileage\">Maximum mileage/km:</label>\n          <Field type=\"text\" name=\"maxMileage\" />\n          <button type=\"submit\" disabled={isSubmitting}>\n            Search\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectAutos,\n  selectBrandFilter,\n  selectMaxMileageFilter,\n  selectMinMileageFilter,\n  selectPriceFilter,\n} from 'redux/selectors';\nimport { AutoCard } from 'components/AutoCard/AutoCard';\nimport { AutoList } from './AutoCardList.styled';\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMoreButton';\nimport { FilterForm } from 'components/FormikForm/FormikForm';\n\nexport const AutosList = () => {\n  const autos = useSelector(selectAutos);\n  const brandFilter = useSelector(selectBrandFilter);\n  const priceFilter = useSelector(selectPriceFilter);\n  const minMileage = useSelector(selectMinMileageFilter);\n  const maxMileage = useSelector(selectMaxMileageFilter);\n  const filteredAutos = autos.filter(auto => {\n    if (brandFilter && auto.make !== brandFilter) {\n      return false;\n    }\n    if (priceFilter) {\n      const autoPrice = parseFloat(auto.rentalPrice.replace('$', ''));\n      if (autoPrice > parseFloat(priceFilter)) {\n        return false;\n      }\n    }\n    if (minMileage && auto.mileage < parseInt(minMileage, 10)) {\n      return false;\n    }\n    if (maxMileage && auto.mileage > parseInt(maxMileage, 10)) {\n      return false;\n    }\n    return true;\n  });\n\n  return (\n    <>\n      <FilterForm />\n      <AutoList>\n        {filteredAutos.map(auto => {\n          return <AutoCard onCard={auto} />;\n        })}\n      </AutoList>\n      <LoadMoreButton />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAutos } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nimport { AutosList } from 'components/AutoCardList/AutoCardList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAutos());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && !error && <b>Loading in progress...</b>}\n      <AutosList />\n    </div>\n  );\n}\n"],"names":["AutoList","styled","_templateObject","_taggedTemplateLiteral","FilterForm","dispatch","useDispatch","prices","i","push","_jsx","Formik","initialValues","brand","price","minMileage","maxMileage","onSubmit","values","_ref","setSubmitting","resetForm","setBrandFilter","setPriceFilter","setFromMileage","setToMileage","children","_ref2","isSubmitting","_jsxs","Form","htmlFor","Field","as","name","value","arrData","index","map","type","disabled","AutosList","autos","useSelector","selectAutos","brandFilter","selectBrandFilter","priceFilter","selectPriceFilter","selectMinMileageFilter","selectMaxMileageFilter","filteredAutos","filter","auto","make","parseFloat","rentalPrice","replace","mileage","parseInt","_Fragment","AutoCard","onCard","LoadMoreButton","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchAutos"],"sourceRoot":""}